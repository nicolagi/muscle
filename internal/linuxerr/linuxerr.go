package linuxerr

// E is an error type that is understood by the Linux kernel's 9P driver.
// The Linux kernel's 9P driver maps error strings to errno values /usr/src/linux-source-5.4.0/net/9p/error.c.
// Here we pick a string for each error code defined in that mapping.
type E string

var (
	E2BIG           = E("Argument list too long")
	EACCES          = E("Permission denied")
	EAGAIN          = E("Resource temporarily unavailable")
	EALREADY        = E("Operation already in progress")
	EBADFD          = E("File descriptor in bad state")
	EBADF           = E("Bad file descriptor")
	EBADMSG         = E("Bad message")
	EBUSY           = E("Device or resource busy")
	ECOMM           = E("Communication error on send")
	ECONNABORTED    = E("Software caused connection abort")
	ECONNREFUSED    = E("Connection refused")
	ECONNRESET      = E("Connection reset by peer")
	EDEADLK         = E("Resource deadlock avoided")
	EDOM            = E("Numerical argument out of domain")
	EDQUOT          = E("Disk quota exceeded")
	EEXIST          = E("File exists")
	EFAULT          = E("Bad address")
	EFBIG           = E("File too large")
	EHOSTDOWN       = E("Host is down")
	EHOSTUNREACH    = E("No route to host")
	EIDRM           = E("Identifier removed")
	EINPROGRESS     = E("Operation now in progress")
	EINTR           = E("Interrupted system call")
	EINVAL          = E("Invalid argument")
	EIO             = E("Input/output error")
	EISCONN         = E("Transport endpoint is already connected")
	EISDIR          = E("Is a directory")
	EISNAM          = E("Is a named type file")
	ELOOP           = E("Too many levels of symbolic links")
	EMFILE          = E("Too many open files")
	EMLINK          = E("Too many links")
	EMSGSIZE        = E("Message too long")
	ENAMETOOLONG    = E("File name too long")
	ENETDOWN        = E("Network is down")
	ENETRESET       = E("Network dropped connection on reset")
	ENETUNREACH     = E("Network is unreachable")
	ENFILE          = E("Too many open files in system")
	ENOBUFS         = E("No buffer space available")
	ENODATA         = E("No data available")
	ENODEV          = E("No such device")
	ENOENT          = E("No such file or directory")
	ENOLCK          = E("No locks available")
	ENOLINK         = E("Link has been severed")
	ENOMEM          = E("Cannot allocate memory")
	ENOMSG          = E("No message of desired type")
	ENONET          = E("Machine is not on the network")
	ENOPKG          = E("Package not installed")
	ENOPROTOOPT     = E("Protocol not available")
	ENOSPC          = E("No space left on device")
	ENOSYS          = E("Function not implemented")
	ENOTBLK         = E("Block device required")
	ENOTCONN        = E("Transport endpoint is not connected")
	ENOTDIR         = E("Not a directory")
	ENOTEMPTY       = E("Directory not empty")
	ENOTSOCK        = E("Socket operation on non-socket")
	ENXIO           = E("No such device or address")
	EOPNOTSUPP      = E("Operation not supported")
	EPERM           = E("Operation not permitted")
	EPFNOSUPPORT    = E("Protocol family not supported")
	EPIPE           = E("Broken pipe")
	EPROTO          = E("Protocol error")
	EPROTONOSUPPORT = E("Protocol not supported")
	ERANGE          = E("Numerical result out of range")
	EREMOTE         = E("Object is remote")
	EREMOTEIO       = E("Remote I/O error")
	EROFS           = E("Read-only file system")
	ESHUTDOWN       = E("Cannot send after transport endpoint shutdown")
	ESOCKTNOSUPPORT = E("Socket type not supported")
	ESPIPE          = E("Illegal seek")
	ESTRPIPE        = E("Streams pipe error")
	ETIMEDOUT       = E("Connection timed out")
	ETXTBSY         = E("Text file busy")
	EUSERS          = E("Too many users")
	EXDEV           = E("Invalid cross-device link")
)

var _ error = (*E)(nil)

// Error implements error.
func (e E) Error() string {
	return string(e)
}
